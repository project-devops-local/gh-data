name: Deploy website
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    runs-on: arc-runner-set
    container:
      image: node:18
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
      - name: version docker
        run: echo "dckr_pat_BY36gKQg_2BR9q3VE3QI0f-ZSmM" | docker login  -u maikol555 --password-stdin 
  build:
    needs: test
    runs-on: arc-runner-set
    outputs:
      script-file: ${{ steps.js-filename.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: js-filename
        run: |
          filename=$(find dist/assets/ -type f -name '*.js' -exec basename {} \; | head -n1)
          echo "script-file=$filename" >> $GITHUB_OUTPUT
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: |
            dist
            package.json
      - run: echo "Build artifacts uploaded!"
        name: hola-mudo
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: website-build
      - name: output
        run: ls -ltra
      - name: Deploy
        run: echo "Deploying..."
      - name: output
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
