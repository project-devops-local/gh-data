name: Deploy website

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: demo-runner-scale-set
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test

  build:
    needs: test
    runs-on: demo-runner-scale-set
    outputs:
      script-file: ${{ steps.js-filename.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: js-filename
        run: |
          filename=$(find dist/assets/ -type f -name '*.js' -exec basename {} \; | head -n1)
          echo "script-file=$filename" >> $GITHUB_OUTPUT
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: |
            dist
            package.json
      - run: echo "Build artifacts uploaded!"
        name: hola-mudo

  deploy:
    needs: build
    runs-on: demo-runner-scale-set
    environment:
      name: production
    strategy:
      matrix:
        message: ["prueba", "prueba2", "Deploying frontend", "Deploying backend", "Deploying database", "Deploying cache", "Deploying CDN", "Deploying API", "Deploying Auth Service", "Deploying Payment Gateway", "Deploying Notifications", "Deploying Reports", "Deploying Search Engine", "Deploying File Storage", "Deploying Analytics", "Deploying Monitoring", "Deploying Logging Service", "Deploying Load Balancer", "Deploying Firewall Config", "Deploying Backup Service"]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: website-build
      - name: List build files
        run: ls -ltra
      - name: Print JS filename from build output
        run: |
          echo "JS File: ${{ needs.build.outputs.script-file }}"
      - name: Deploying component
        run: echo "${{ matrix.message }}"
